#ifndef MAKAILIB_EX_GAME_DANMAKU_LAYERS_H
#define MAKAILIB_EX_GAME_DANMAKU_LAYERS_H

#include <makai/makai.hpp>

#ifndef MK_EX_DANMAKU_SUBLAYER_COUNT
#define MK_EX_DANMAKU_SUBLAYER_COUNT 8
#endif

#ifndef MK_EX_DANMAKU_UI_LAYER_OFFSET
#define MK_EX_DANMAKU_UI_LAYER_OFFSET 32
#endif

#define MK_EX_DANMAKU_TRUE_SUBLAYER_COUNT (MK_EX_DANMAKU_SUBLAYER_COUNT * 2 + 1)
#define MK_EX_DANMAKU_TRUE_UI_LAYER_OFFSET (MK_EX_DANMAKU_TRUE_SUBLAYER_COUNT * MK_EX_DANMAKU_UI_LAYER_OFFSET)

namespace Makai::Ex::Game::Danmaku {
	namespace RenderLayer {
		#define MK_EX_DANMAKU_LAYER(NAME)\
			NAME##_BOTTOM_LAYER,\
			NAME##_LAYER		= (NAME##_BOTTOM_LAYER + (SUBLAYER_COUNT)),\
			NAME##_TOP_LAYER	= (NAME##_LAYER + (SUBLAYER_COUNT))
		
		#define MK_EX_DANMAKU_LAYER_CUSTOM(NAME, INDEX)\
			NAME##_BOTTOM_LAYER = (INDEX),\
			NAME##_LAYER		= (NAME##_BOTTOM_LAYER + (SUBLAYER_COUNT)),\
			NAME##_TOP_LAYER	= (NAME##_LAYER + (SUBLAYER_COUNT))
		
		#define MK_EX_DANMAKU_LAYER_WITH_OVERLAY(NAME)\
			MK_EX_DANMAKU_LAYER(NAME),\
			MK_EX_DANMAKU_LAYER(NAME##_OVERLAY)

		#define MK_EX_DANMAKU_LAYER_PLAYER_THINGS(NAME)\
			MK_EX_DANMAKU_LAYER_WITH_OVERLAY(NAME##_SPELL_BG),\
			MK_EX_DANMAKU_LAYER(NAME##_SPELL),\
			MK_EX_DANMAKU_LAYER(NAME##_LASER),\
			MK_EX_DANMAKU_LAYER(NAME##_BULLET),\
			MK_EX_DANMAKU_LAYER(NAME##_OPTION),\
			MK_EX_DANMAKU_LAYER(NAME)

		#define MK_EX_DANMAKU_LAYER_ENEMY_THINGS(NAME)\
			MK_EX_DANMAKU_LAYER(NAME##_BULLET),\
			MK_EX_DANMAKU_LAYER(NAME##_LASER),\
			MK_EX_DANMAKU_LAYER(NAME)
		
		#define MK_EX_DANMAKU_DUAL_LAYER(NAME, TYPE)\
			TYPE(NAME##1),\
			TYPE(NAME##2)

		#define MK_EX_DANMAKU_LAYER_SPELL_BG(NAME)\
			MK_EX_DANMAKU_LAYER_WITH_OVERLAY(NAME##_SPELL_BG)

		enum Layer: usize {
			MK_EX_DANMAKU_LAYER_WITH_OVERLAY(WORLD),
			MK_EX_DANMAKU_DUAL_LAYER(BOSS, MK_EX_DANMAKU_LAYER_SPELL_BG),
			MK_EX_DANMAKU_DUAL_LAYER(PLAYER, MK_EX_DANMAKU_LAYER_PLAYER_THINGS),
			MK_EX_DANMAKU_DUAL_LAYER(ITEM, MK_EX_DANMAKU_LAYER),
			MK_EX_DANMAKU_DUAL_LAYER(ENEMY, MK_EX_DANMAKU_LAYER_ENEMY_THINGS),
			MK_EX_DANMAKU_LAYER(HITBOX),
			MK_EX_DANMAKU_LAYER(STAGE_CARD),
			MK_EX_DANMAKU_LAYER_CUSTOM(INGAME_OVERLAY, MK_EX_DANMAKU_TRUE_UI_LAYER_OFFSET),
			MK_EX_DANMAKU_LAYER(INGAME_UI),
			MK_EX_DANMAKU_LAYER(DIALOG),
			MK_EX_DANMAKU_LAYER(MENU),
		};

		#undef MK_EX_DANMAKU_LAYER
		#undef MK_EX_DANMAKU_LAYER_CUSTOM
		#undef MK_EX_DANMAKU_LAYER_WITH_OVERLAY
		#undef MK_EX_DANMAKU_LAYER_PLAYER_THINGS
		#undef MK_EX_DANMAKU_LAYER_ENEMY_THINGS
		#undef MK_EX_DANMAKU_DUAL_LAYER
		#undef MK_EX_DANMAKU_LAYER_SPELL_BG
	}

	namespace CollisionLayer {
		using CollisionMask = Makai::Collision::C2D::LayerMask;
		
		constexpr CollisionMask	PLAYER			= {1 << 0,	0,		0,		0		};
		constexpr CollisionMask	PLAYER_BULLET	= {1 << 1,	0,		0,		0		};
		constexpr CollisionMask	PLAYER_LASER	= {1 << 2,	0,		0,		0		};
		constexpr CollisionMask	PLAYER_SPELL	= {1 << 3,	0,		0,		0		};
		constexpr CollisionMask	ENEMY			= {0,		1 << 0,	0,		0		};
		constexpr CollisionMask	ENEMY_BULLET	= {0,		1 << 1,	0,		0		};
		constexpr CollisionMask	ENEMY_LASER		= {0,		1 << 2,	0,		0		};
		constexpr CollisionMask	ITEM			= {0,		0,		1 << 0,	0		};

		constexpr CollisionMask PLAYER_MASK	=	PLAYER	| PLAYER_BULLET	| PLAYER_LASER	| PLAYER_SPELL	;
		constexpr CollisionMask ENEMY_MASK	=	ENEMY	| ENEMY_BULLET	| ENEMY_LASER					;

		constexpr CollisionMask PLAYER_COLLISION		= ENEMY_MASK	| ITEM				;
		constexpr CollisionMask ENEMY_COLLISION			= PLAYER_MASK						;
		constexpr CollisionMask ITEM_COLLISION			= PLAYER		| PLAYER_ITEMBOX	;
		
		constexpr CollisionMask ENEMY_ATTACK_COLLISION	= PLAYER	| PLAYER_GRAZEBOX	| PLAYER_ITEMBOX	;
		constexpr CollisionMask PLAYER_ATTACK_COLLISION	= ENEMY												;
	}

	namespace CollisionTag {
		using CollisionMask = Makai::Collision::C2D::LayerMask;

		constexpr CollisionMask	BULLET_ERASER	= {1 << 0,	0,		0,		0	};
		constexpr CollisionMask	GRAZEABLE		= {1 << 1,	0,		0,		0	};
		constexpr CollisionMask	PLAYER_HITBOX	= {0,		1 << 0,	0,		0	};
		constexpr CollisionMask	PLAYER_GRAZEBOX	= {0,		1 << 1,	0,		0	};
		constexpr CollisionMask	PLAYER_ITEMBOX	= {0,		1 << 2,	0,		0	};
	}
}

#endif